local DIRECTION_LEFT = -1
local DIRECTION_RIGHT = 1
local SPEED = 150
local GRAVITY = 1000
local JUMP = 600
local DASH_COOLDOWN = 0.8 -- seconds

function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.velocity = vmath.vector3(0, 0, 0)
	self.current_anim = nil 
	self.on_ground = false
	self.last_dash = 0
end

local function flip(direction)
	pprint('test')
	pprint(direction)
	sprite.set_hflip("#sprite", direction < 0)
end

function move(self)
	self.velocity.x = SPEED * self.direction
end

function dash(self)
	local now = socket.gettime()
	local position = go.get_position()
	
	if now > (self.last_dash + DASH_COOLDOWN) then
		position.x = position.x + self.direction * 200
		
		go.set_position(position)
		self.last_dash = now
	end
end

function jump()
end

function attack()
end

function animate()
end

function update(self, dt)
	local p = go.get_position()

	go.set_position(p + self.velocity * dt)
	pprint(self.velocity)

	local anim = hash("idle")                                  -- [1]

	if self.velocity.x > 0 then                                     -- [2]
		anim = hash("walk")
	elseif self.velocity.x < 0 then
		anim = hash("walk")
	elseif self.velocity.y > 0 then
		anim = hash("jump")
	end

	if self.duck then
		anim = hash("duck")
	end

	if anim ~= self.current_anim then                          -- [3]
		sprite.play_flipbook("#sprite", anim)                  -- [4]
		self.current_anim = anim                               -- [5]
	end

	self.velocity.x = 0 
end

local function clamp(v, min, max)
	if v < min then return min
	elseif v > max then return max
	else return v end
end

function fixed_update(self, dt)
	-- gravity
	if (self.on_ground == true) then
		-- self.dir.y = 1000
	else 
		self.velocity.y = self.velocity.y - GRAVITY * dt
	end
	
	self.velocity.y = clamp(self.velocity.y, -2000, 2000)
end

function on_input(self, action_id, action)
	if action_id == hash("duck") and action.pressed then
		self.duck = true
	elseif action_id == hash("duck") and action.released then
		self.duck = false
	end

	if action_id == hash("jump") and action.pressed and self.on_ground then
		self.velocity.y = 600
		self.on_ground = false
	elseif action_id == hash("left") then
		self.direction = DIRECTION_LEFT
		move(self)
		flip(self.direction)
	elseif action_id == hash("right") then
		self.direction = DIRECTION_RIGHT
		move(self)
		flip(self.direction)
	end

	if action_id == hash("dash") and action.pressed then
		dash(self)
	end
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("contact_point_response") and message.other_group == hash("floor")) then
		self.on_ground = true
		self.velocity.y = 0
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end