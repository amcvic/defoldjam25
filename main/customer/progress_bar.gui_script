local druid = require("druid.druid")
local speed = .1

local function set_value(self,value)
	gui.set_text(self.text_value, math.ceil(value * 100) .. "%")
	self.progress:set_to(value)
end

function init(self)
	self.root_node = gui.get_node("root")
	self.druid = druid.new(self)
	self.percentage = 1
	self.time_up = false
	self.waiting = false
	
	self.progress = self.druid:new_progress("progress_bar_fill", "x")
	self.text_value = gui.get_node("progress_value")

	set_value(self, self.progress:get())
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.waiting then
		if not self.time_up then
			self.percentage = self.percentage - speed * dt
			set_value(self, self.percentage)
		end
		if self.percentage < 0 and not self.time_up then
			self.time_up = true
			msg.post("#customer", "leave")
			gui.set_enabled(self.root_node, false)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_position") then
		gui.set_position(self.root_node, message.position)
	end
	if message_id == hash("start_waiting") then
		self.waiting = true
	end
end

function on_input(self, action_id, action)
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
